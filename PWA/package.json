{
  "name": "indigishare-platform-pwa",
  "description": "IndigiShare - PWA",
  "repository": "https://github.com/Piki-Tech-Social-Enterprise/IndigiShare",
  "license": "MIT",
  "version": "1.0.0",
  "dependencies": {
    "axios": "^0.21.1",
    "bootstrap": "5.0.2",
    "chart.js": "3.3.2",
    "draft-js": "^0.11.7",
    "draftjs-to-html": "^0.9.1",
    "firebase": "^8.6.8",
    "googleapis": "^78.0.0",
    "history": "4.10.0",
    "moment": "^2.29.1",
    "node-sass": "4.14.1",
    "perfect-scrollbar": "1.5.1",
    "prop-types": "^15.7.2",
    "react": "17.0.2",
    "react-bootstrap-table": "^4.3.1",
    "react-chartjs-2": "3.0.3",
    "react-datetime": "^3.0.4",
    "react-dom": "17.0.2",
    "react-draft-wysiwyg": "^1.14.7",
    "react-google-maps": "9.4.5",
    "react-notification-alert": "0.0.13",
    "react-router": "5.2.0",
    "react-router-dom": "5.2.0",
    "react-scripts": "3.4.3",
    "react-tagsinput-2": "^3.19.8",
    "reactstrap": "8.9.0",
    "recompose": "^0.30.0",
    "sweetalert2": "^11.0.18",
    "sweetalert2-react": "^0.8.3"
  },
  "scripts": {
    "updateDependencies": "ncu -x react-scripts,node-sass,history -u && pnpm i",
    "start": "pnpm run startLocal",
    "start:og": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "install:clean": "shx rm -rf node_modules/ && shx rm -rf package-lock.json && pnpm install && pnpm run downloadDevSupportFiles && pnpm start",
    "process-sass": "run-s -sn compile-sass map-sass minify-sass",
    "compile-sass": "run-p -sn now-ui-dashboard-compile-sass indigishare-compile-sass",
    "minify-sass": "run-p -sn now-ui-dashboard-minify-sass indigishare-minify-sass",
    "map-sass": "run-p -sn now-ui-dashboard-map-sass indigishare-map-sass",
    "now-ui-dashboard-compile-sass": "node-sass src/assets/scss/now-ui-dashboard.scss src/assets/css/now-ui-dashboard.css",
    "now-ui-dashboard-minify-sass": "node-sass src/assets/scss/now-ui-dashboard.scss src/assets/css/now-ui-dashboard.min.css --output-style compressed",
    "now-ui-dashboard-map-sass": "node-sass src/assets/scss/now-ui-dashboard.scss src/assets/css/now-ui-dashboard.css --source-map true",
    "indigishare-compile-sass": "node-sass src/assets/scss/indigishare.scss src/assets/css/indigishare.css",
    "indigishare-minify-sass": "node-sass src/assets/scss/indigishare.scss src/assets/css/indigishare.min.css --output-style compressed",
    "indigishare-map-sass": "node-sass src/assets/scss/indigishare.scss src/assets/css/indigishare.css --source-map true",
    "firebaseServe": "firebase serve --port 5035",
    "firebaseDeploy": "firebase deploy -m \"\"\"$REACT_APP_PWA_NAME v$REACT_APP_PWA_BUILD_VERSION\"\"\" --except functions",
    "firebaseUseProd": "firebase use \"indigishare-platform\"",
    "envCmdLocal": "env-cmd -e local run-s -sn",
    "envCmdProd": "env-cmd -e prod run-s -sn",
    "startLocal": "run-s -sn firebaseUseProd \"envCmdLocal start:og\"",
    "startProd": "run-s -sn firebaseUseProd \"envCmdProd start:og\"",
    "firebaseServeProd": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseServe\"",
    "firebaseDeployProd": "run-s -sn firebaseUseProd \"envCmdProd prepareBuild\" \"envCmdProd cleanBuild firebaseDeploy uploadDevSupportFiles\" | gnomon t elapsed-total -i -h 60 -m 30",
    "firebaseDeployFunctionsProd": "cd ./functions && pnpm run deployProd | gnomon t elapsed-total -i -h 60 -m 30",
    "firebaseDeployWebsiteProd": "cd ../Website && pnpm run firebaseDeployProd | gnomon t elapsed-total -i -h 60 -m 30",
    "firebaseDeployAllProd": "run-s -sn firebaseDeployFunctionsProd firebaseDeployProd firebaseDeployWebsiteProd",
    "removeNodeModules": "shx test -e ./node_modules && shx rm -rf ./node_modules && echo \"'node_modules' successfully removed\" || echo \"'node_modules' folder not found\"",
    "removePackageLockJsonFile": "shx test -e ./package-lock.json && shx rm -rf package-lock.json && echo \"'package-lock.json' file successfully removed\" || echo \"'package-lock.json' file not found\"",
    "npmSetProgressOff": "pnpm set progress=false",
    "npmInstall": "pnpm install",
    "cleanInstall": "run-s -sn removeNodeModules removePackageLockJsonFile npmSetProgressOff npmInstall",
    "removeBuild": "shx test -e ./build && shx rm -rf ./build && echo \"'build' folder successfully removed\" || echo \"'build' folder not found\"",
    "cleanBuild": "run-s -sn removeBuild cleanInstall build",
    "uploadDevSupportFiles": "babel-node ./buildUtilities/uploadDevSupportFiles.js",
    "downloadDevSupportFiles": "babel-node ./buildUtilities/downloadDevSupportFiles.js",
    "incrementBuildVer": "babel-node ./buildUtilities/IncrementBuildVersion.js",
    "generateSitemap": "babel-node ./buildUtilities/SitemapGenerator.js",
    "prepareBuild": "run-s -sn incrementBuildVer generateSitemap",
    "firebaseEmulators": "firebase emulators:start --only auth,database,functions,storage --inspect-functions $REACT_APP_FNC_PORT",
    "firebaseEmulators:withDebug": "firebase emulators:start --only auth,database,functions,storage --inspect-functions $REACT_APP_FNC_PORT --debug",
    "firebaseEmulators:withData": "firebase emulators:start --only auth,database,functions,storage --inspect-functions $REACT_APP_FNC_PORT --import=./emulator-data --export-on-exit=./emulator-data",
    "firebaseEmulators:withData:withDebug": "firebase emulators:start --only auth,database,functions,storage --inspect-functions $REACT_APP_FNC_PORT --import=./emulator-data --export-on-exit=./emulator-data --debug",
    "firebaseEmulatorsLocal": "run-s -sn firebaseUseProd \"envCmdLocal firebaseEmulators\"",
    "firebaseEmulatorsLocal:clean": "run-s -sn firebaseUseProd \"envCmdLocal cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsLocal:withDebug": "run-s -sn firebaseUseProd \"envCmdLocal firebaseEmulators:withDebug\"",
    "firebaseEmulatorsLocal:clean:withDebug": "run-s -sn firebaseUseProd \"envCmdLocal cleanBuild firebaseEmulators:withDebug\"",
    "firebaseEmulatorsLocal:withData": "run-s -sn firebaseUseProd \"envCmdLocal firebaseEmulators:withData\"",
    "firebaseEmulatorsLocal:clean:withData": "run-s -sn firebaseUseProd \"envCmdLocal cleanBuild firebaseEmulators:withData\"",
    "firebaseEmulatorsLocal:withData:withDebug": "run-s -sn firebaseUseProd \"envCmdLocal firebaseEmulators:withData:withDebug\"",
    "firebaseEmulatorsLocal:clean:withData:withDebug": "run-s -sn firebaseUseProd \"envCmdLocal cleanBuild firebaseEmulators:withData:withDebug\"",
    "firebaseEmulatorsProd": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulators\"",
    "firebaseEmulatorsProd:clean": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsProd:withDebug": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulators:withDebug\"",
    "firebaseEmulatorsProd:clean:withDebug": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseEmulators:withDebug\"",
    "firebaseEmulatorsProd:withData": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulators:withData\"",
    "firebaseEmulatorsProd:clean:withData": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseEmulators:withData\"",
    "firebaseEmulatorsProd:withData:withDebug": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulators:withData:withDebug\"",
    "firebaseEmulatorsProd:clean:withData:withDebug": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseEmulators:withData:withDebug\"",
    "firebaseEmulatorFunctions": "firebase emulators:start --only functions --inspect-functions $REACT_APP_FNC_PORT",
    "firebaseEmulatorFunctionsLocal": "run-s -sn firebaseUseProd \"envCmdLocal firebaseEmulatorFunctions\"",
    "firebaseEmulatorFunctionsProd": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulatorFunctions\"",
    "uploadDevSupportFilesProd": "run-s -sn firebaseUseProd \"envCmdProd uploadDevSupportFiles\"",
    "downloadDevSupportFilesProd": "run-s -sn firebaseUseProd \"envCmdProd downloadDevSupportFiles\"",
    "preinstall": "npx only-allow pnpm"
  },
  "optionalDependencies": {
    "@types/googlemaps": "3.43.3",
    "@types/markerclustererplus": "2.1.33",
    "@types/react": "17.0.11",
    "jquery": "3.6.0",
    "typescript": "4.3.4"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.26.0",
    "chalk": "^4.1.1",
    "env-cmd": "^10.1.0",
    "npm-run-all": "^4.1.5",
    "react-router-sitemap": "^1.2.0"
  }
}
